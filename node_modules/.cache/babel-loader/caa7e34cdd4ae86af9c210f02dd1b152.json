{"ast":null,"code":"import _classCallCheck from\"C:\\\\xampp\\\\htdocs\\\\reacttestes\\\\consultorio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\xampp\\\\htdocs\\\\reacttestes\\\\consultorio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\xampp\\\\htdocs\\\\reacttestes\\\\consultorio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\xampp\\\\htdocs\\\\reacttestes\\\\consultorio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\xampp\\\\htdocs\\\\reacttestes\\\\consultorio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{findByLabelText}from'@testing-library/react';var ButtonMob=/*#__PURE__*/function(_React$Component){_inherits(ButtonMob,_React$Component);//Metodo construtor para trabalhar com estados\nfunction ButtonMob(){var _this;_classCallCheck(this,ButtonMob);//classe super para trabalhar com estado\n_this=_possibleConstructorReturn(this,_getPrototypeOf(ButtonMob).call(this));_this.state={visNav:'Flex'};return _this;}//esse metodo fará a função toggle\n_createClass(ButtonMob,[{key:\"clickMe\",value:function clickMe(){//se visNav for = a flex \nif(this.state.visNav==='flex'){this.setState({visNav:'none'});}else{this.setState({visNav:'flex'});}document.querySelector(\".nav\").style.display=this.state.visNav;}},{key:\"render\",value:function render(){return(//bind informa que esta função esta atrelada com essa classe\nReact.createElement(\"div\",{className:\"buttonMob\",onClick:this.clickMe.bind(this)},React.createElement(\"img\",{src:\"/img/botao.png\",alt:\"botao mobile\"})));}}]);return ButtonMob;}(React.Component);export{ButtonMob as default};","map":{"version":3,"sources":["C:/xampp/htdocs/reacttestes/consultorio/src/components/header/ButtonMob.js"],"names":["React","findByLabelText","ButtonMob","state","visNav","setState","document","querySelector","style","display","clickMe","bind","Component"],"mappings":"mpBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,eAAT,KAAgC,wBAAhC,C,GAGqBC,CAAAA,S,+EAGjB;AAEA,oBACA,2CACI;AACA,6EACA,MAAKC,KAAL,CAAW,CACPC,MAAM,CAAC,MADA,CAAX,CAHJ,aAOC,CAED;+DACS,CAEL;AAEA,GAAG,KAAKD,KAAL,CAAWC,MAAX,GAAsB,MAAzB,CAAgC,CAC5B,KAAKC,QAAL,CAAc,CACVD,MAAM,CAAC,MADG,CAAd,EAGH,CAJD,IAIK,CACG,KAAKC,QAAL,CAAc,CACVD,MAAM,CAAC,MADG,CAAd,EAEP,CAEDE,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,KAA/B,CAAqCC,OAArC,CAA6C,KAAKN,KAAL,CAAWC,MAAxD,CACC,C,uCAEI,CACL,MAEI;AAEA,2BAAK,SAAS,CAAC,WAAf,CAA2B,OAAO,CAAE,KAAKM,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAApC,EACI,2BAAK,GAAG,CAAC,gBAAT,CAA0B,GAAG,CAAC,cAA9B,EADJ,CAJJ,EASH,C,uBA1CkCX,KAAK,CAACY,S,SAAxBV,S","sourcesContent":["import React from 'react';\r\nimport { findByLabelText } from '@testing-library/react';\r\n\r\n\r\nexport default class ButtonMob extends React.Component {\r\n\r\n\r\n    //Metodo construtor para trabalhar com estados\r\n\r\n    constructor()\r\n    {\r\n        //classe super para trabalhar com estado\r\n        super();\r\n        this.state={\r\n            visNav:'Flex'\r\n\r\n        }\r\n    }\r\n\r\n    //esse metodo fará a função toggle\r\n    clickMe(){\r\n\r\n        //se visNav for = a flex \r\n\r\n        if(this.state.visNav === 'flex'){\r\n            this.setState({\r\n                visNav:'none'\r\n            });\r\n        }else{\r\n                this.setState({\r\n                    visNav:'flex'});            \r\n        }\r\n\r\n        document.querySelector(\".nav\").style.display=this.state.visNav;\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            //bind informa que esta função esta atrelada com essa classe\r\n\r\n            <div className=\"buttonMob\" onClick={this.clickMe.bind(this)}>\r\n                <img src=\"/img/botao.png\" alt=\"botao mobile\"/>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}